
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000100  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000100  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d2  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005bd  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000143  00000000  00000000  00000e83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000fc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ec  00000000  00000000  00000fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d8  00000000  00000000  000012d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e0       	ldi	r30, 0x00	; 0
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define DELAY 1500
unsigned char ssd[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71};
//                      0,    1,    2,    3,    4,    5,    6,    7,    8,    9,    A,    B,    C,    D,    E,    F
int main(void){
	unsigned char i;
	DDRC = 0xff;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xf0;
  86:	80 ef       	ldi	r24, 0xF0	; 240
  88:	8a bb       	out	0x1a, r24	; 26
	while(1){
		PORTA = 1 << 4;
  8a:	40 e1       	ldi	r20, 0x10	; 16
		PORTC = ssd[11];
		_delay_ms(DELAY);
		
		PORTA = 1 << 5;
  8c:	30 e2       	ldi	r19, 0x20	; 32
		PORTC = ssd[10];
		_delay_ms(DELAY);
		
		PORTA = 1 << 6;
  8e:	20 e4       	ldi	r18, 0x40	; 64
		PORTC = ssd[13];
		_delay_ms(DELAY);
		
		PORTA = 1 << 7;
  90:	90 e8       	ldi	r25, 0x80	; 128
int main(void){
	unsigned char i;
	DDRC = 0xff;
	DDRA = 0xf0;
	while(1){
		PORTA = 1 << 4;
  92:	4b bb       	out	0x1b, r20	; 27
		PORTC = ssd[11];
  94:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__data_start+0xb>
  98:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	5f ed       	ldi	r21, 0xDF	; 223
  9c:	63 e9       	ldi	r22, 0x93	; 147
  9e:	84 e0       	ldi	r24, 0x04	; 4
  a0:	51 50       	subi	r21, 0x01	; 1
  a2:	60 40       	sbci	r22, 0x00	; 0
  a4:	80 40       	sbci	r24, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <main+0x1e>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x28>
  aa:	00 00       	nop
		_delay_ms(DELAY);
		
		PORTA = 1 << 5;
  ac:	3b bb       	out	0x1b, r19	; 27
		PORTC = ssd[10];
  ae:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_start+0xa>
  b2:	85 bb       	out	0x15, r24	; 21
  b4:	5f ed       	ldi	r21, 0xDF	; 223
  b6:	63 e9       	ldi	r22, 0x93	; 147
  b8:	84 e0       	ldi	r24, 0x04	; 4
  ba:	51 50       	subi	r21, 0x01	; 1
  bc:	60 40       	sbci	r22, 0x00	; 0
  be:	80 40       	sbci	r24, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <main+0x38>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <main+0x42>
  c4:	00 00       	nop
		_delay_ms(DELAY);
		
		PORTA = 1 << 6;
  c6:	2b bb       	out	0x1b, r18	; 27
		PORTC = ssd[13];
  c8:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <__data_start+0xd>
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	5f ed       	ldi	r21, 0xDF	; 223
  d0:	63 e9       	ldi	r22, 0x93	; 147
  d2:	84 e0       	ldi	r24, 0x04	; 4
  d4:	51 50       	subi	r21, 0x01	; 1
  d6:	60 40       	sbci	r22, 0x00	; 0
  d8:	80 40       	sbci	r24, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x52>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x5c>
  de:	00 00       	nop
		_delay_ms(DELAY);
		
		PORTA = 1 << 7;
  e0:	9b bb       	out	0x1b, r25	; 27
		PORTC = ssd[15];
  e2:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__data_start+0xf>
  e6:	85 bb       	out	0x15, r24	; 21
  e8:	5f ed       	ldi	r21, 0xDF	; 223
  ea:	63 e9       	ldi	r22, 0x93	; 147
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	51 50       	subi	r21, 0x01	; 1
  f0:	60 40       	sbci	r22, 0x00	; 0
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x6c>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x76>
  f8:	00 00       	nop
  fa:	cb cf       	rjmp	.-106    	; 0x92 <main+0x10>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
